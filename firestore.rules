rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Users can only read/write their own data.
    // Admins can read/write any user's data.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
      
      // Users can manage their own enrollments and submissions.
      // Admins can read any user's subcollections.
      match /enrollments/{courseId} {
         allow read, write: if request.auth.uid == userId;
         allow read: if isAdmin();
      }
      match /submissions/{assignmentId} {
         allow read, write: if request.auth.uid == userId;
         allow read: if isAdmin();
      }
    }

    // Courses are public to read for any authenticated user.
    // Only admins can create or modify courses.
    match /courses/{courseId} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin();
    }
    
    // Community chat messages can be read by any authenticated user.
    // Users can only create messages as themselves.
    // Admins can delete any message.
    match /messages/{messageId} {
      allow read: if request.auth.uid != null;
      allow create: if request.auth.uid == request.resource.data.uid;
      allow delete: if isAdmin();
    }
    
    // In-app-messages (notifications)
    // - Authenticated users can read general notifications.
    // - Admins can create notifications.
    match /in-app-messages/{messageId} {
      allow read: if request.auth.uid != null;
      allow create: if isAdmin();
    }
    
    // Access codes can be read by authenticated users during redemption.
    // Only admins can create/update access codes.
    match /accessCodes/{codeId} {
        allow read: if request.auth.uid != null;
        allow write: if isAdmin();
    }
    
    // Admins collection can only be read by admins to verify status.
    // No one can write to it directly from the client.
    match /admins/{adminId} {
        allow read: if isAdmin();
        allow write: if false; 
    }
  }
}